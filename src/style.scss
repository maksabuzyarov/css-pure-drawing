// -------------------------------------
//   region variables
// -------------------------------------
$colors: (
        red: #e6261f,
        orange: #eb7532,
        yellow: #f7d038,
        green: #a3e048,
        turquoise: #49da9a,
        cyan: #34bbe6,
        blue: #4355db,
        purple: #d23be7,
        white: #fff,
        black: #000,
);

$bth-height: 30px;
// endregion variables

*, *:before, *:after {
  box-sizing: border-box;
}

html {
  font-size: 15px;
}

html, body {
  min-height: 100%;
  padding: 0;
  margin: 0;
}

.page {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100%;
  padding: 30px 0;

  font-family: 'Tomorrow', sans-serif;
  color: #fff;

  background: linear-gradient(to bottom, #64C8BD, #094A6F);
}

.title {
  margin-bottom: 30px;

  font-size: 60px;
  text-align: center;
}

.center {
  flex: 1;
  max-width: 600px;
}

.canva {
  $block: &;

  display: block;
  position: relative;
  margin-top: 10px;

  user-select: none;

  &:active {

    #{$block}__cover {
      display: none;
    }
  }

  &__cover {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
  }
}

.clearfix {
  display: table;
  clear: both;
}

.btn {
  height: $bth-height;
  padding: 5px 10px;

  font-size: 16px;
  font-family: inherit;
  color: #333;

  background: #fff;
  border: 0;

  cursor: pointer;

  margin-right: 5px;

  &:active {
    background: #eee;

    &[action='clean'] ~ .draw-window .cell {
      background: #fff;
      transition: all 0s 0s;
    }

    &[action='fill'] {
      & ~ .draw-window [name='color']:checked {

        @each $key, $color in $colors {

          &[value="#{$key}"] {

            & ~ .canva .cell {
              background: $color;
              transition: all 0s 0s;
            }
          }
        }
      }
    }
  }
}

.input-btn {
  display: none;

  & + label {
    height: $bth-height;
    padding: 0 10px;

    font-size: 16px;
    line-height: $bth-height - 2px;
    border: 1px solid #fff;

    cursor: pointer;
  }

  &:checked + label {
    color: #333;

    background: #fff;
  }

  &_option {

    & + label {
      margin-left: 5px;

      float: right;
    }
  }
}


.option {

  &[name='smooth'] {

    &:checked ~ .draw-window .cell:hover {
      transition-duration: 200ms;
    }
  }

  &[name='rounded'] {

    &:checked ~ .draw-window .cell {
      border-radius: 50%;
    }
  }

  &[name='color'] {

    @each $key, $color in $colors {

      &[value="#{$key}"] {

        &:checked {

          & ~ .canva {

            .cell:hover {
              background: $color;
            }
          }
        }
      }
    }
  }
}

.draw-window {
  position: relative;
}

.color {

  & + label {
    position: absolute;
    left: - ($bth-height + 10px);
    float: right;
    display: inline-block;
    width: $bth-height;
    height: $bth-height;

    margin-top: -$bth-height - 5px;

    border: 1px solid #333;

    cursor: length($colors);

    @for $i from 1 through length($colors) + 1 {
      &:nth-child(#{$i * 2}) {
       top: ($bth-height + 5px) * $i;
      }
    }
  }

  display: none;

  &:checked {

    & + label {
      box-shadow: 0 0 1px 2px #10fdff;
    }
  }

  @each $key, $color in $colors {

    &[value="#{$key}"] {

      & + label {
        background: $color;
      }
    }
  }
}

.row {
  display: flex;
}

.col {
  flex: 1;
}

.cell {
  padding-bottom: 100%;

  background: rgba(#fff, 0.99);
  border-radius: 0;

  transition: background 0s 1000000s;

  &:hover {
    background: #fff;

    transition: all 0s 0s;
  }
}
